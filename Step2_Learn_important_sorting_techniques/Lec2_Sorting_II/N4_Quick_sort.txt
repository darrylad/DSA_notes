Quick sort algorithm

arr[] = [4, 6, 2, 5, 7, 9, 1, 3];

Explain -> pseudocode -> dry run -> online compilation

pick a pivot. can be any element.
place it in its correct place in a sorted array.

use low and high pointers.

         i                    j
arr[] = [4, 5, 2, 5, 7, 9, 1, 3];

void qs(arr,  low, high) {
    if (low < high) {
        int pIndex = f(arr, low, high);
        qs(arr, low, pIndex-1);
        qs(arr, pIndex+1, high);
    }
}

int f(arr, low, high) {
    int pivot = arr[low];
    int i = low;    int j = high;

    while(i < j) {
        while(arr[i] <= pivot && i <= high - 1)    i++;

        while(arr[j] > pivot && j >= low + 1)     j--;

        if(i < j)   swap( arr[i], arr[j] );
    }
    swap( arr[low], arr[j] );
    return j;
}

This is a Divide and conquer algorithm.

Time complexity O(N log N)
Space complexity O(1)
